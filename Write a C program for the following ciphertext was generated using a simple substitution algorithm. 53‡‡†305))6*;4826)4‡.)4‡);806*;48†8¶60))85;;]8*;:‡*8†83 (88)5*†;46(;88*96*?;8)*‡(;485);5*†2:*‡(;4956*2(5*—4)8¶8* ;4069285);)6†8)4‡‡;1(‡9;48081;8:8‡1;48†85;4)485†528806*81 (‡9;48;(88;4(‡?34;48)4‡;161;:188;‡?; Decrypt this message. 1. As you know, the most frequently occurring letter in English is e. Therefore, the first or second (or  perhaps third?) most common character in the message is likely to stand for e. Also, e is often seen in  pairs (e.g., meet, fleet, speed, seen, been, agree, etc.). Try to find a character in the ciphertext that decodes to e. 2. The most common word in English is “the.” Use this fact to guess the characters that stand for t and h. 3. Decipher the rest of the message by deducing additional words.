#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <ctype.h>

#define MAX_CHARS 128

void frequency_analysis(const char *text, int *freq) {
    for (int i = 0; text[i]; i++) {
        if (text[i] >= 32 && text[i] <= 126) {
            freq[(unsigned char)text[i]]++;
        }
    }
}

void print_frequencies(int *freq) {
    printf("Character Frequencies:\n");
    for (int i = 32; i <= 126; i++) {
        if (freq[i] > 0)
            printf("'%c' (%d): %d\n", i, i, freq[i]);
    }
}

// Manual substitution map based on analysis
char substitute(char c) {
    switch (c) {
        case '‡': return 'e';
        case '(': return 't';
        case '8': return 'h';
        case '*': return 'o';
        case ';': return 'u';
        case '4': return 'r';
        case ')': return 's';
        case '5': return 'n';
        case '6': return 'd';
        case '3': return 'm';
        case '0': return 'a';
        case '9': return 'l';
        case '†': return 'c';
        case '2': return 'y';
        case '1': return 'g';
        case ':': return 'b';
        case '.': return 'f';
        case '?': return 'v';
        case ']': return 'w';
        case '¶': return 'i';
        case '—': return 'p';
        default: return c;  // leave other characters unchanged
    }
}

void decrypt(const char *ciphertext) {
    printf("\nDecrypted Message:\n");
    for (int i = 0; ciphertext[i]; i++) {
        putchar(substitute(ciphertext[i]));
    }
    printf("\n");
}

int main() {
    const char *ciphertext =
        "53‡‡†305))6*;4826)4‡.)4‡);806*;48†8¶60))85;;]8*;:‡*8†83\n"
        "(88)5*†;46(;88*96*?;8)*‡(;485);5*†2:*‡(;4956*2(5*—4)8¶8*\n"
        ";4069285);)6†8)4‡‡;1(‡9;48081;8:8‡1;48†85;4)485†528806*81\n"
        "(‡9;48;(88;4(‡?34;48)4‡;161;:188;‡?;";

    int freq[MAX_CHARS] = {0};

    frequency_analysis(ciphertext, freq);
    print_frequencies(freq);
    decrypt(ciphertext);

    return 0;
}
