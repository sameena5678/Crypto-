#include <stdio.h>
#include <string.h>
#include <ctype.h>

// Function to encrypt plaintext using monoalphabetic cipher
void monoalphabeticEncrypt(char* plaintext, char* keyMap) {
    for (int i = 0; plaintext[i] != '\0'; i++) {
        if (isupper(plaintext[i])) {
            plaintext[i] = toupper(keyMap[plaintext[i] - 'A']);
        } else if (islower(plaintext[i])) {
            plaintext[i] = tolower(keyMap[plaintext[i] - 'a']);
        }
    }
}

int main() {
    char plaintext[1000];
    // Example keyMap: cipher alphabet (must be a permutation of A-Z)
    // For example, simple shuffled alphabet
    char keyMap[26] = {
        'Q','W','E','R','T','Y','U','I','O','P',
        'A','S','D','F','G','H','J','K','L','Z',
        'X','C','V','B','N','M'
    };

    printf("Enter plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);

    monoalphabeticEncrypt(plaintext, keyMap);

    printf("Encrypted text: %s\n", plaintext);

    return 0;
}
